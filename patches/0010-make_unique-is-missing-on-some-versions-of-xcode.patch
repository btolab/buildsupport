From eaeb3b208af4fe30e179102e90afb2577eece973 Mon Sep 17 00:00:00 2001
From: Jeffrey Clark <dude@zaplabs.com>
Date: Sun, 3 Jan 2016 14:52:14 -0600
Subject: [PATCH 10/13] make_unique is missing on some versions of xcode

Signed-off-by: Jeffrey Clark <dude@zaplabs.com>
---
 src/lib/util/coretmpl.h | 24 ++++++++++++++++++++++++
 1 file changed, 24 insertions(+)

diff --git a/src/lib/util/coretmpl.h b/src/lib/util/coretmpl.h
index 9201041..38ef380 100644
--- a/src/lib/util/coretmpl.h
+++ b/src/lib/util/coretmpl.h
@@ -17,6 +17,10 @@
 #include "corealloc.h"
 
 #include <vector>
+#if defined(__APPLE__)
+#include <memory>
+#include <type_traits>
+#endif
 
 #if defined(_MSC_VER) && (_MSC_VER < 1900)
 #include <yvals.h>
@@ -29,6 +33,26 @@
 #define assert(x) do { if (!(x)) { fprintf(stderr, "Assert: %s\n", #x); osd_break_into_debugger("Assertion failed"); } } while (0)
 #endif
 
+#if defined(__APPLE__)
+namespace std
+{
+	template <typename T, typename ... Args>
+	auto make_unique(Args&&... args)
+	-> typename std::enable_if<!std::is_array<T>::value,
+		std::unique_ptr<T>>::type
+	{
+		return std::unique_ptr<T>(new T(std::forward<Args>(args)...));
+	}
+
+	template<class T>
+	auto make_unique(std::size_t size)
+	-> typename std::enable_if<std::is_array<T>::value,
+		std::unique_ptr<T>>::type
+	{
+		return std::unique_ptr<T>(new typename std::remove_extent<T>::type[size]());
+	}
+}
+#endif
 
 typedef std::vector<UINT8> dynamic_buffer;
 
-- 
2.4.3

