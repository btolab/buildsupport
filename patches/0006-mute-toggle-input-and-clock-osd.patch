From 5c604d87af85131c1024b9f7c459a3b268fa827a Mon Sep 17 00:00:00 2001
From: Jeffrey Clark <dude@zaplabs.com>
Date: Sun, 3 Apr 2016 16:29:05 +0000
Subject: [PATCH 06/11] mute toggle input and clock osd

---
 src/emu/inpttype.h          |  2 ++
 src/emu/ioport.h            |  2 ++
 src/emu/sound.cpp           |  2 +-
 src/frontend/mame/ui/ui.cpp | 43 +++++++++++++++++++++++++++++++++++++++++++
 src/frontend/mame/ui/ui.h   |  4 ++++
 5 files changed, 52 insertions(+), 1 deletion(-)

diff --git a/src/emu/inpttype.h b/src/emu/inpttype.h
index 605abe0..58816c9 100644
--- a/src/emu/inpttype.h
+++ b/src/emu/inpttype.h
@@ -862,6 +862,8 @@ inline void construct_core_types_UI(simple_list<input_type_entry> &typelist)
 	INPUT_PORT_DIGITAL_TYPE( 0, UI,      UI_LOAD_STATE,       "Load State",             input_seq(KEYCODE_F7, input_seq::not_code, KEYCODE_LSHIFT) )
 	INPUT_PORT_DIGITAL_TYPE( 0, UI,      UI_TAPE_START,       "UI (First) Tape Start",  input_seq(KEYCODE_F2, input_seq::not_code, KEYCODE_LSHIFT) )
 	INPUT_PORT_DIGITAL_TYPE( 0, UI,      UI_TAPE_STOP,        "UI (First) Tape Stop",   input_seq(KEYCODE_F2, KEYCODE_LSHIFT) )
+	INPUT_PORT_DIGITAL_TYPE( 0, UI,      UI_SHOW_CLOCK,       "Show Current Time",      input_seq(KEYCODE_G, KEYCODE_LSHIFT) )
+	INPUT_PORT_DIGITAL_TYPE( 0, UI,      UI_MUTE,             "Toggle Mute",            input_seq(KEYCODE_LCONTROL, KEYCODE_M) )
 	INPUT_PORT_DIGITAL_TYPE( 0, UI,      UI_DATS,             "UI External DAT View",   input_seq(KEYCODE_LALT, KEYCODE_D) )
 	INPUT_PORT_DIGITAL_TYPE( 0, UI,      UI_FAVORITES,        "UI Add/Remove favorites",input_seq(KEYCODE_LALT, KEYCODE_F) )
 	INPUT_PORT_DIGITAL_TYPE( 0, UI,      UI_UP_FILTER,        nullptr,                  input_seq() )
diff --git a/src/emu/ioport.h b/src/emu/ioport.h
index 3f6a018..142ab1b 100644
--- a/src/emu/ioport.h
+++ b/src/emu/ioport.h
@@ -358,6 +358,8 @@ enum ioport_type
 		IPT_UI_LOAD_STATE,
 		IPT_UI_TAPE_START,
 		IPT_UI_TAPE_STOP,
+		IPT_UI_SHOW_CLOCK,
+		IPT_UI_MUTE,
 		IPT_UI_DATS,
 		IPT_UI_FAVORITES,
 		IPT_UI_UP_FILTER,
diff --git a/src/emu/sound.cpp b/src/emu/sound.cpp
index 0983a5f..fee5ed7 100644
--- a/src/emu/sound.cpp
+++ b/src/emu/sound.cpp
@@ -905,7 +905,7 @@ sound_stream *sound_manager::stream_alloc(device_t &device, int inputs, int outp
 void sound_manager::set_attenuation(int attenuation)
 {
 	m_attenuation = attenuation;
-	machine().osd().set_mastervolume(m_muted ? -32 : m_attenuation);
+	machine().osd().set_mastervolume(m_muted ? -48 : m_attenuation);
 }
 
 
diff --git a/src/frontend/mame/ui/ui.cpp b/src/frontend/mame/ui/ui.cpp
index ea23715..b813182 100644
--- a/src/frontend/mame/ui/ui.cpp
+++ b/src/frontend/mame/ui/ui.cpp
@@ -27,6 +27,7 @@
 #include "ui/sliders.h"
 #include "ui/viewgfx.h"
 #include "imagedev/cassette.h"
+#include <time.h>
 #include "image.h"
 
 
@@ -274,6 +275,7 @@ mame_ui_manager::mame_ui_manager(running_machine &machine)
 		m_single_step(false),
 		m_showfps(false),
 		m_showfps_end(0),
+		m_show_clock(false),
 		m_show_profiler(false),
 		m_popup_text_end(0),
 		m_mouse_arrow_texture(nullptr),
@@ -972,6 +974,29 @@ bool mame_ui_manager::show_fps_counter()
 	return result;
 }
 
+bool mame_ui_manager::show_clock() const
+{
+	return m_show_clock;
+}
+
+void mame_ui_manager::set_show_clock(bool show)
+{
+	m_show_clock = show;
+}
+
+void mame_ui_manager::show_clock_display(render_container *container)
+{
+       char buf[20];
+       time_t ltime;
+       struct tm *today;
+       float line_height = get_line_height();
+
+       time(&ltime);
+       today = localtime(&ltime);
+
+       sprintf(buf, "%02d:%02d:%02d", today->tm_hour, today->tm_min, today->tm_sec);
+       draw_text_full(container, buf, 0.0f, 1.0f - line_height, 1.0f, JUSTIFY_RIGHT, WRAP_WORD, DRAW_OPAQUE, ARGB_WHITE, ARGB_BLACK, nullptr, nullptr);
+}
 
 //-------------------------------------------------
 //  set_show_profiler - show/hide the profiler
@@ -1527,6 +1552,11 @@ UINT32 mame_ui_manager::handler_ingame(running_machine &machine, render_containe
 					JUSTIFY_RIGHT, WRAP_WORD, DRAW_OPAQUE, ARGB_WHITE, ARGB_BLACK, nullptr, nullptr);
 	}
 
+	if (mame_machine_manager::instance()->ui().show_clock())
+	{
+		mame_machine_manager::instance()->ui().show_clock_display(container);
+	}
+
 	// Show the duration of current part (intro or gameplay or extra)
 	if (mame_machine_manager::instance()->ui().show_timecode_counter()) {
 		std::string tempstring;
@@ -1703,6 +1733,19 @@ UINT32 mame_ui_manager::handler_ingame(running_machine &machine, render_containe
 	if (machine.ui_input().pressed(IPT_UI_SHOW_FPS))
 		mame_machine_manager::instance()->ui().set_show_fps(!mame_machine_manager::instance()->ui().show_fps());
 
+	// toggle clock display
+	if (machine.ui_input().pressed(IPT_UI_SHOW_CLOCK))
+		mame_machine_manager::instance()->ui().set_show_clock(!mame_machine_manager::instance()->ui().show_clock());
+
+	// toggle mute
+	if (machine.ui_input().pressed(IPT_UI_MUTE))
+	{
+		static bool muted = true;
+		machine.sound().system_mute(muted);
+		machine.popmessage("Mute %s", muted ? "Enabled" : "Disabled");
+		muted = !muted;
+	}
+
 	// increment frameskip?
 	if (machine.ui_input().pressed(IPT_UI_FRAMESKIP_INC))
 		mame_machine_manager::instance()->ui().increase_frameskip();
diff --git a/src/frontend/mame/ui/ui.h b/src/frontend/mame/ui/ui.h
index 29cad32..e269878 100644
--- a/src/frontend/mame/ui/ui.h
+++ b/src/frontend/mame/ui/ui.h
@@ -138,6 +138,9 @@ public:
 	void set_show_fps(bool show);
 	bool show_fps() const;
 	bool show_fps_counter();
+	void set_show_clock(bool show);
+	bool show_clock() const;
+	void show_clock_display(render_container *container);
 	void set_show_profiler(bool show);
 	bool show_profiler() const;
 	void show_menu();
@@ -176,6 +179,7 @@ private:
 	bool                    m_single_step;
 	bool                    m_showfps;
 	osd_ticks_t             m_showfps_end;
+	bool                    m_show_clock;
 	bool                    m_show_profiler;
 	osd_ticks_t             m_popup_text_end;
 	std::unique_ptr<UINT8[]> m_non_char_keys_down;
-- 
2.4.11

