From 351204548c7851aaf9c45a01db720b9d3f565943 Mon Sep 17 00:00:00 2001
From: Jeffrey Clark <dude@zaplabs.com>
Date: Sun, 3 Apr 2016 16:46:31 +0000
Subject: [PATCH 15/17] luaengine api extension

---
 src/emu/luaengine.cpp | 28 ++++++++++++++++++++++++++++
 src/emu/luaengine.h   |  2 ++
 2 files changed, 30 insertions(+)

diff --git a/src/emu/luaengine.cpp b/src/emu/luaengine.cpp
index 18ae017..921cba8 100644
--- a/src/emu/luaengine.cpp
+++ b/src/emu/luaengine.cpp
@@ -897,6 +897,25 @@ int lua_engine::lua_screen::l_orientation(lua_State *L)
 }
 
 //-------------------------------------------------
+//  screen_aspect - return screen aspect ratio
+//  -> manager:machine().screens[":screen"]:aspect()
+//-------------------------------------------------
+
+int lua_engine::lua_screen::l_aspect(lua_State *L)
+{
+	screen_device *sc = luabridge::Stack<screen_device *>::get(L, 1);
+	if(!sc) {
+		return 0;
+	}
+
+	render_container &rc = sc->container();
+	float aspect = luaThis->machine().render().ui_aspect(&rc);
+
+	lua_pushnumber(L, aspect);
+	return 1;
+}
+
+//-------------------------------------------------
 //  screen_refresh - return screen refresh rate
 //  -> manager:machine().screens[":screen"]:refresh()
 //-------------------------------------------------
@@ -1124,6 +1143,13 @@ void lua_engine::push(lua_State *L, void *p, const char *tname)
 	lua_setmetatable(L, -2);
 }
 
+int lua_engine::l_emu_sleep(lua_State *L)
+{
+	luaL_argcheck(L, lua_isnumber(L, 1), 1, "sleep milliseconds (integer) expected");
+	osd_sleep(osd_ticks_per_second() / 1000 * lua_tounsigned(L, 1));
+	return 1;
+}
+
 int lua_engine::l_emu_exit(lua_State *L)
 {
 	luaThis->machine().schedule_exit();
@@ -1450,6 +1476,7 @@ void lua_engine::initialize()
 			.addCFunction ("start",       l_emu_start )
 			.addCFunction ("pause",       l_emu_pause )
 			.addCFunction ("unpause",     l_emu_unpause )
+			.addCFunction ("sleep",       l_emu_sleep )
 			.addCFunction ("register_prestart", l_emu_register_prestart )
 			.addCFunction ("register_start", l_emu_register_start )
 			.addCFunction ("register_stop",  l_emu_register_stop )
@@ -1671,6 +1698,7 @@ void lua_engine::initialize()
 				.addCFunction ("draw_box",  &lua_screen::l_draw_box)
 				.addCFunction ("draw_line", &lua_screen::l_draw_line)
 				.addCFunction ("draw_text", &lua_screen::l_draw_text)
+				.addCFunction ("aspect", &lua_screen::l_aspect)
 				.addCFunction ("height", &lua_screen::l_height)
 				.addCFunction ("width", &lua_screen::l_width)
 				.addCFunction ("orientation", &lua_screen::l_orientation)
diff --git a/src/emu/luaengine.h b/src/emu/luaengine.h
index b98b959..7e070ba 100644
--- a/src/emu/luaengine.h
+++ b/src/emu/luaengine.h
@@ -115,6 +115,7 @@ private:
 	static int l_emu_pause(lua_State *L);
 	static int l_emu_unpause(lua_State *L);
 	static int l_emu_set_hook(lua_State *L);
+	static int l_emu_sleep(lua_State *L);
 	static int l_emu_register_prestart(lua_State *L);
 	static int l_emu_register_start(lua_State *L);
 	static int l_emu_register_stop(lua_State *L);
@@ -145,6 +146,7 @@ private:
 	struct lua_screen {
 		int l_height(lua_State *L);
 		int l_width(lua_State *L);
+		int l_aspect(lua_State *L);
 		int l_orientation(lua_State *L);
 		int l_refresh(lua_State *L);
 		int l_type(lua_State *L);
-- 
2.8.0

